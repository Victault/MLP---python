from random import*

NbNeuronesEntree=input("Entrez le nombre de neurones de la couche d'entrée:")
NbNeuronesEntree=int(NbNeuronesEntree)

NbNeuronesSortie=input("Entrez le nombre de neurones de la couche de sortie:")
NbNeuronesSortie=int(NbNeuronesSortie)

NbCouchesCachées=input("Entrez le nombre de couches cachées:")
NbCouchesCachées=int(NbCouchesCachées)

NbNeuronesCouchesCachées=input("Entrez le nombre de neurones des couches cachées:")
NbNeuronesCouchesCachées=int(NbNeuronesCouchesCachées)

FichierApp= input("Merci bien. Maintenant, veuillez entrer le nom du fichier contenant la base d'exemples pour l'apprentissage, avec son extension:")
FichierGen= input("Et le nom du fichier contenant la base d'exemples pour la généralisation, avec son extension:")

CoucheEntrée = [] ## Une liste vide suffit pour la couche d'entrée: les "neurones" qu'elle contient ne sont pas des tableaux, 
                  ## mais simplement les nombres correspondant aux valeurs de l'exemple choisi. Cf la fonction LireExempleApprentissage()

CouchesCachées = []
for i in range(NbCouchesCachées) :
	CouchesCachées.append(CréerCouche(NbNeuronesCouchesCachées, i))
	
CoucheSortie = CréerCouche(NbNeuroneSortie, NbCouchesCachées)

TableauDesPoids=[] ## Un tableau qui contient tous les poids du réseau ! (Il faut bien les garder en mémoire pour les modifier,
		   ## et pour les retrouver dans la phase de généralisation...)
		   ## A l'indice 0: le tableau des poids de la première couche cachée, à l'indice 1 celui de la deuxième...
		   ## Donc par exemple TableauDesPoids[0][1]= la liste des poids du 2ème neurone de la 1ère couche cachée.
		   


def CréerNeurone(numéroCoucheDuNeurone):
	Neurone=[[],[],0]
	
	poidsDuNeurone=[]
	TableauDesPoids[numéroCoucheDuNeurone].append(poidsDuNeurone)
	
	return Neurone
	## 

def ModifierPoids():

def CréerCouche(nombreNeurones, numéroCouche):
	Couche=[]
	for i in range(nombreNeurones):
		Couche.append(CréerNeurone(numéroCouche))
	poidsDeLaCouche=[]
	TableauDesPoids.append(poidsDeLaCouche)
	
	return Couche
		
def initialisationDesPoids():
	for i in range(len(TableauDesPoids)):
		for j in range(len(TableauDesPoids[i]):
			if i == 0:
				k=0
				while k< NbNeuronesEntree:
					TableauDesPoids[i][j].append(randrange(-0.3, +0.3, 0.00001))
					k+=1
	## print("Poids du premier neurone de la première couche cachée:", TableauDesPoids[0][0])
			else:
				k=0
				while k< NbNeuronesCouchesCachées:
					TableauDesPoids[i][j].append(randrange(-0.3, +0.3, 0.00001))
					k+=1
	## print("TableauDesPoids après initialisation:", TableauDesPoids)
				
				
	
	
def LireExempleApprentissage():
	f=open(FichierApp,"r") ## Lecture dans le fichier d'apprentissage
	entrée=f.read(1)
	while entrée != " ": ## Tant qu'on a les valeurs d'entrée et pas les sorties désirées, on continue à lire
		entrée=int(entrée)
		CoucheEntrée.append(entrée) ## On place les valeurs dans la couche d'entrée
		entrée=f.read(1)
	f.close()
		
		
def LireExempleGénéralisation():
	f=open(FichierGen,"r") ## Lecture dans le fichier de généralisation
	entrée=f.read(1)
	while entrée != " ": ## Tant qu'on a les valeurs d'entrée et pas les sorties désirées, on continue à lire
		entrée=int(entrée)
		CoucheEntrée.append(entrée) ## On place les valeurs dans la couche d'entrée
		entrée=f.read(1)	
	f.close()
